{"version":3,"sources":["img/icon-strain-sativa.svg","img/icon-strain-indica.svg","img/icon-strain-hybrid.svg","components/FilterBlock/FilterBlock.js","components/Tab/Tab.js","components/HomePanel/HomePanel.js","components/SearchShelf/SearchShelf.js","components/ContentBlock/ContentBlock.js","components/StrainIcon/StrainIcon.js","components/StrainListItem/StrainListItem.js","config.js","components/StrainProfile/StrainProfile.js","components/FilterButtonSmall/FilterButtonSmall.js","components/StrainsView/StrainsView.js","components/GeneralPage/GeneralPage.js","components/NoMatch/NoMatch.js","routers/AppRouter.js","components/Navigation/Navigation.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FilterBlock","props","react_default","a","createElement","id","filterHead","className","filterSubhead","filterOptions","map","option","Link","key","to","concat","Tab","currentView","href","tabText","data-id","onClick","handleTabClick","recOptions","head","subHead","options","recEffects","medOptions","medEffects","HomePanel","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","target","dataset","state","selectedView","setState","selectedViewDetails","components_Tab_Tab","components_FilterBlock_FilterBlock","Component","SearchShelf","slidedown","closed","searchVisible","ContentBlock","children","StrainIcon","_ref","strainName","iconSize","src","IconSativa","width","height","alt","IconIndica","IconHybrid","StrainListItem","NavLink","effectId","shouldHide","strainSelected","components_StrainIcon_StrainIcon","strainRace","indexOf","strainEffect","ApiKey","StrainProfile","buildStrainProfile","urlParams","strainId","fetch","then","response","json","data","strainDetails","strainEffects","strainFlavors","isLoaded","catch","error","console","log","match","params","prevProps","prevState","strainProfile","_this$state","race","desc","length","strain","positive","negative","medical","FilterButtonSmall","toggleStrains","customCssId","btnText","StrainsView","selectedFilter","textContent","toLowerCase","strainVisible","strainProfileSelected","toggleSearch","buildStrainList","strains","strainsLoaded","err","strainEffectPath","_this2","filterSelection","strainsList","components_StrainListItem_StrainListItem","name","effect","components_SearchShelf_SearchShelf","components_ContentBlock_ContentBlock","components_FilterButtonSmall_FilterButtonSmall","Route","path","component","GeneralPage","buildPage","window","location","origin","pageTitle","pageBody","contentLoaded","pageContent","title","NoMatch","AppRouter","Switch","exact","Navigation","App","components_Navigation_Navigation","routers_AppRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","BrowserRouter","components_App_App","document","getElementById","URL","process","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.974fa475.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-strain-sativa.c3e2c88b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-strain-indica.1b31c239.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-strain-hybrid.4d8ee991.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './FilterBlock.scss';\n\nconst FilterBlock = (props) => (\n  <div id=\"filterblock\">\n    {props.filterHead !== null ? \n    <h1 className=\"font-weight-bold h2 mb-3 mt-0\">{props.filterHead}</h1>\n    : ''}\n    {props.filterSubhead !== null ? \n    <h2 className=\"h5 mb-3\">{props.filterSubhead}</h2>\n    : ''}\n    {props.filterOptions.map((option) => \n        <Link key={option} to={`/effects/${option}`} className=\"btn btn-outline-primary btn-sm mr-2 mb-2\">{option}</Link>\n    )}\n  </div>\n);\n\nexport default FilterBlock;","import React from 'react';\nimport './Tab.scss';\n\nconst Tab = (props) => {\n  if(props.currentView === props.id) {\n    return (\n      <li className=\"tabs__tab tabs__tab--active\">\n        <a href={props.tabText} data-id={props.id} onClick={props.handleTabClick}>{props.tabText}</a>\n      </li>\n    );\n  }\n  return (\n    <li className=\"tabs__tab\">\n        <a href={props.tabText} data-id={props.id} onClick={props.handleTabClick}>{props.tabText}</a>\n    </li>\n  );\n};\n\nexport default Tab;","import React, { Component } from 'react';\nimport recEffects from '../../data/strain-options-rec.json';\nimport medEffects from '../../data/strain-options-med.json';\nimport FilterBlock from './../FilterBlock/FilterBlock';\nimport Tab from './../Tab/Tab';\nimport './HomePanel.scss';\n\nconst recOptions = {\n  id: 'recreactional',\n  head: 'Find the marijuana strain to suit your mood',\n  subHead: 'I want to feel:',\n  options: recEffects\n}\n\nconst medOptions = {\n  id: 'medicinal',\n  head: 'Find the right marijuana strain for what ails you',\n  subHead: 'I want to treat:',\n  options: medEffects\n}\n\nclass HomePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedView: 'recreational',\n      selectedViewDetails: recOptions \n    }\n  }\n\n  // event listener for toggling between tabs and displaying the relevant content in FilterBlock component\n  handleTabClick = (e) => {\n    e.preventDefault();\n    const id = e.target.dataset.id;\n    if(this.state.selectedView === 'recreational') {\n      this.setState({\n        selectedView: id,\n        selectedViewDetails: medOptions\n      });\n    } else {\n      this.setState({\n        selectedView: id,\n        selectedViewDetails: recOptions\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home-wrap\">\n        <div className=\"container\">\n          <div className=\"panel-home\">\n            <div className=\"panel-col-1 panel-flash px-5\">\n              <span>Image Laurie Rowan</span>\n            </div>\n            <div className=\"panel-col-2 px-5\">\n              <ul className=\"tabs mb-0\">\n                <Tab tabText=\"Recreational effects\" currentView={this.state.selectedView} handleTabClick={this.handleTabClick} id=\"recreational\" />\n                <Tab tabText=\"Medicinal effects\" currentView={this.state.selectedView} handleTabClick={this.handleTabClick} id=\"medicinal\" />\n              </ul>\n              <FilterBlock \n                filterHead={this.state.selectedViewDetails.head} \n                filterSubhead={this.state.selectedViewDetails.subHead}\n                filterOptions={this.state.selectedViewDetails.options}\n              />\n            </div>\n          </div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default HomePanel;","import React, { Component } from 'react';\n// import { CSSTransitionGroup } from 'react-transition-group';\nimport FilterBlock from './../FilterBlock/FilterBlock';\nimport Tab from './../Tab/Tab';\nimport { SlideDown } from 'react-slidedown';\nimport recEffects from '../../data/strain-options-rec.json';\nimport medEffects from '../../data/strain-options-med.json';\nimport './SearchShelf.scss';\nimport 'react-slidedown/lib/slidedown.css';\n\nconst recOptions = {\n  id: 'recreactional',\n  head: 'Find the marijuana strain to suit your mood',\n  options: recEffects\n}\n\nconst medOptions = {\n  id: 'medicinal',\n  head: 'Find the right marijuana strain for what ails you',\n  options: medEffects\n}\n\nclass SearchShelf extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedView: 'recreational',\n      selectedViewDetails: recOptions \n    }\n  }\n\n  // event listener for toggling between tabs and displaying the relevant content in FilterBlock component\n  handleTabClick = (e) => {\n    e.preventDefault();\n    const id = e.target.dataset.id;\n    if(this.state.selectedView === 'recreational') {\n      this.setState({\n        selectedView: id,\n        selectedViewDetails: medOptions\n      });\n    } else {\n      this.setState({\n        selectedView: id,\n        selectedViewDetails: recOptions\n      });\n    }\n  }\n\n  render() {\n    return (\n      <SlideDown closed={!this.props.searchVisible} className={'search-dropdown-slidedown'}>\n          <div className=\"search-shelf-wrapper\" key=\"shelf-wrapper\" >\n            <div className=\"container\">\n              <div className=\"row py-4\">\n                <div className=\"col-md-12\">\n                  <ul className=\"tabs mb-3\">\n                    <Tab tabText=\"Recreational effects\" currentView={this.state.selectedView} handleTabClick={this.handleTabClick} id=\"recreational\" />\n                    <Tab tabText=\"Medicinal effects\" currentView={this.state.selectedView} handleTabClick={this.handleTabClick} id=\"medicinal\" />\n                  </ul>\n                  <FilterBlock \n                    filterHead={null}\n                    filterSubhead={null}\n                    filterOptions={this.state.selectedViewDetails.options}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </SlideDown>\n    );\n  }\n}\n\nexport default SearchShelf;","import React, { Component } from 'react';\nimport './ContentBlock.scss';\n\nclass ContentBlock extends Component {\n  render() {\n    return (\n      <div id=\"contentblock\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default ContentBlock;","import React from 'react';\nimport IconSativa from '../../img/icon-strain-sativa.svg';\nimport IconIndica from '../../img/icon-strain-indica.svg';\nimport IconHybrid from '../../img/icon-strain-hybrid.svg';\nimport './StrainIcon.scss';\n\nconst StrainIcon = ({ strainName, iconSize }) => {\n  switch(strainName) {\n    case 'sativa':\n      return (\n        <span className=\"icon-strain--list\">\n          <img src={IconSativa} width={iconSize} height={iconSize} alt=\"Sativa icon\" />\n        </span>\n      );\n    case 'indica':\n      return (\n        <span className=\"icon-strain--list\">\n          <img src={IconIndica} width={iconSize} height={iconSize} alt=\"Indica icon\" />\n        </span>\n      );\n    default:\n      return (\n        <span className=\"icon-strain--list\">\n          <img src={IconHybrid} width={iconSize} height={iconSize} alt=\"Hybrid icon\" />\n        </span>\n      );\n  }\n}\n\nexport default StrainIcon;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport recOptions from '../../data/strain-options-rec.json';\nimport StrainIcon from '../StrainIcon/StrainIcon';\nimport './StrainListItem.scss';\n\nconst StrainListItem = (props) => (\n  \n  <NavLink to={`/effects/${props.effectId}/strain/${props.strainName}`} className={props.shouldHide}>\n    <li onClick={props.strainSelected} className=\"strain-list__item py-2 px-4\">\n      <h3 className=\"h6 mb-0 font-weight-bold\">{props.strainName}</h3>\n      <span className=\"strain-race\"><StrainIcon strainName={props.strainRace} iconSize=\"15px\" /> {props.strainRace}</span>\n      <span className=\"ml-1\">\n        {recOptions.indexOf(props.strainEffect) !== -1 ? '— Desired effect: ' : '— Useful for treating '}\n        {props.strainEffect}\n      </span>\n    </li>\n  </NavLink>\n\n);\n\nexport default StrainListItem;","const ApiKey = '6jcA9bi';\n\nexport default ApiKey;","import React, { Component } from 'react';\nimport ApiKey from '../../config';\nimport StrainIcon from '../StrainIcon/StrainIcon';\nimport './StrainProfile.scss';\n\nclass StrainProfile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      strainName: null, \n      strainDetails: null,\n      strainEffects: null,\n      strainFlavors: null,\n      isLoaded: false\n    };\n  }\n\n  // method to handle all API requests for building the strain profile\n  buildStrainProfile = (urlParams) => {\n    let strainId;\n    // fetch the 1st request (strain race, description and Id)\n    fetch(`http://strainapi.evanbusse.com/${ApiKey}/strains/search/name/${urlParams}`)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        strainName: urlParams,\n        strainDetails: data\n      })\n      // get the id for this strain\n      strainId = data[0].id;\n      // make a 2nd request and return a promise\n      return fetch(`http://strainapi.evanbusse.com/${ApiKey}/strains/data/effects/${strainId}`);\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ \n        strainEffects: data\n      })\n      // make a 3rd request and return a promise\n      return fetch(`http://strainapi.evanbusse.com/${ApiKey}/strains/data/flavors/${strainId}`);\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ \n        strainFlavors: data,\n        isLoaded: true\n      })\n    })\n    .catch(error => console.log('Request failed', error));\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.buildStrainProfile(id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { id } = this.props.match.params;\n    if (prevProps.match.params.id !== id) {\n      this.buildStrainProfile(id);\n    }\n  }\n\n  render() {\n\n    const { strainName, strainDetails, strainEffects, strainFlavors, isLoaded } = this.state;\n\n    let strainProfile;\n\n    if(!isLoaded) {\n      strainProfile = <h4 className=\"h5 text-center\">Data is loading</h4>;\n    } else {\n      strainProfile = \n        <div className=\"container\">\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h2>{strainName}</h2>\n              <p className=\"capitalize\"><StrainIcon strainName={strainDetails[0].race} iconSize=\"25px\" /> {strainDetails[0].race}</p>\n              <p>{strainDetails[0].desc}</p>\n            </div>\n          </div>\n          \n          <div className=\"row\">\n              {strainFlavors.length > 0 ? \n                <div className=\"col-md-12 border-tb pt-3 pb-2 mb-3\">\n                  <h4 className=\"h6 font-weight-bold d-inline-block\">Flavors: </h4> {strainFlavors.map((strain) => <span key={strain} className=\"mx-1 font-weight-normal\">{strain}</span>)}\n                </div>\n              : ''}\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n                <h3 className=\"h5 font-weight-bold mb-3\">Strain characteristics</h3>\n            </div>\n              {strainEffects.positive.length > 0 ? \n                <div className=\"col-md-4\">\n                  <h4 className=\"h6 font-weight-bold\">Positive:</h4> \n                  <ul className=\"strain-list\">\n                    {strainEffects.positive.map((strain) => <li key={strain}>{strain}</li>)}\n                  </ul>\n                </div>\n              : ''}\n              {strainEffects.negative.length > 0 ? \n                <div className=\"col-md-4\">\n                  <h4 className=\"h6 font-weight-bold\">Negative:</h4>\n                  <ul className=\"strain-list\">\n                    {strainEffects.negative.map((strain) => <li key={strain}>{strain}</li>)}\n                  </ul>\n                </div> \n              : ''}\n              {strainEffects.medical.length > 0 ? \n                <div className=\"col-md-4\">\n                <h4 className=\"h6 font-weight-bold\">Medicinal:</h4>\n                <ul className=\"strain-list\">\n                  {strainEffects.medical.map((strain) => <li key={strain}>{strain}</li>)}\n                </ul>\n                </div>\n              : ''}\n          </div>\n        </div>;\n    }\n\n    return (\n      <div className=\"col-md-8 py-5 px-5 strain-profile\">\n        <div className=\"strain-profile-body\">\n          {strainProfile}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StrainProfile;","import React from 'react';\nimport './FilterButtonSmall.scss';\n\nconst FilterButtonSmall = (props) => (\n    <button onClick={props.toggleStrains} className=\"btn btn-outline-primary btn-sm mr-2 mb-2 filter-btn\" id={props.customCssId}>{props.btnText}</button>\n);\n\nexport default FilterButtonSmall;","import React, { Component } from 'react';\nimport SearchShelf from '../SearchShelf/SearchShelf';\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport StrainListItem from '../StrainListItem/StrainListItem';\nimport StrainProfile from '../StrainProfile/StrainProfile';\nimport FilterButtonSmall from '../FilterButtonSmall/FilterButtonSmall';\nimport { Route } from 'react-router-dom';\nimport ApiKey from '../../config';\nimport './StrainsView.scss';\n\nclass StrainsView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // strains collects all the strains from the api based on the effect value passed to the fetch request\n      strains: [],\n      // effectId contains the effect value passed via the url params. This is used in the fetch request below\n      effectId: null,\n      // controls what strain visibility when user clicks a strain filter button. This value will default to 'all' when the componentDidMount method is run\n      strainVisible: null,\n      // lets the strains-filter component know when the strain list has been loaded. This prevents premature display of the filters on the page\n      strainsLoaded: false,\n      // controls when to show default placeholder text in place of the strainProfile component\n      strainProfileSelected: false,\n      // controls whether the drop down search bar is visible\n      searchVisible: false\n    };\n  }\n\n  // function to handle showing and hiding only the selected strains\n  toggleStrains = (e) => {\n    let selectedFilter = e.target.textContent.toLowerCase();\n    if (selectedFilter === 'reset') {\n      selectedFilter = 'all';\n    }\n    this.setState({\n      strainVisible: selectedFilter\n    })\n  }\n\n  // function to handle showing and hiding placeholder text when a strainProfile hasn't yet been selected\n  strainSelected = () => {\n   if(!this.state.strainProfileSelected)\n    this.setState({\n      strainProfileSelected: true\n    })\n  }\n\n  // function to handle toggling the search shelf on the strainsView page\n  toggleSearch = (e) => {\n    e.preventDefault();\n    if(!this.state.searchVisible) {\n      this.setState({ searchVisible: true })\n    } else {\n      this.setState({ searchVisible: false })\n    }\n  }\n\n  // function that calls the API based on the effect value and updates the local state\n  buildStrainList = (urlParams) => {\n    if (this.state.searchVisible) {\n      this.setState({ searchVisible: false});\n    }\n\n    fetch(`http://strainapi.evanbusse.com/${ApiKey}/strains/search/effect/${urlParams}`)\n      .then((response) => response.json())\n      .then((data) => this.setState({ \n        strains: data, \n        effectId: urlParams, \n        strainsLoaded: true,\n        strainVisible: 'all',\n        strainProfileSelected: false\n      }))\n      .catch((err) => console.log(`Something went wrong ${err}`));\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.buildStrainList(id);\n  }\n\n  // fired everytime a component's props or state is updated\n  componentDidUpdate(prevProps, prevState) {\n    const { id } = this.props.match.params;\n    if (id !== prevProps.match.params.id && prevProps.match.params.id !== null) {\n      this.buildStrainList(id);\n    }\n  }\n\n  render() {\n\n    // if effect value is available in state, load it into the strainEffectPath variable for use in Route below\n    let strainEffectPath;\n    if(this.state.effectId) {\n      strainEffectPath = this.state.effectId;\n    }\n\n    // define strainsList variable to hold all strains from the array.map function below, and then displayed on the page\n    const { strains } = this.state;\n    let filterSelection;\n    let strainsList;\n\n    // logic to build the strains list that appears in the sidebar\n    if (this.state.strains.length > 0) {\n\n      if (this.state.strainVisible === 'sativa' || this.state.strainVisible === 'indica' || this.state.strainVisible === 'hybrid') {\n        filterSelection = 'hide';\n      }\n\n      strainsList = strains.map((strain) =>\n        <StrainListItem \n          key={strain.id}\n          effectId={this.state.effectId}\n          strainName={strain.name}\n          strainRace={strain.race}\n          strainEffect={strain.effect}\n          strainSelected={this.strainSelected}\n          shouldHide={this.state.strainVisible !== strain.race ? filterSelection : 'show'} \n        />\n      );\n\n    } else {\n      strainsList = \n        <li className=\"pt-5 px-4\">\n          <h3 className=\"h6 mb-0\">Strain data is loading</h3>\n        </li>;\n    }\n\n\n    return (\n      <div>\n      <SearchShelf searchVisible={this.state.searchVisible} />\n      <ContentBlock>\n        <div className=\"container\">\n          <div className=\"row my-5\">\n            <div className=\"col-md-6\">\n              <h1 className=\"capitalize\">{this.props.match.params.id}</h1>\n            </div>\n            <div className=\"col-md-6\">\n              <a href=\"/new-search\" className=\"btn btn-primary float-right\" onClick={this.toggleSearch}>{this.state.searchVisible === false ? 'Start new search' : 'Close search'}</a>\n            </div>\n          </div>\n          <div className=\"row strain-view-wrap\">\n            <div className=\"col-md-4 strain-list-wrapper pb-4 px-0\">\n            {this.state.strainsLoaded && \n              <div className=\"strains-filter py-3 px-4\">\n                <p className=\"mb-1 filter-heading\">Filter by type</p>\n                <FilterButtonSmall btnText=\"Sativa\" customCssId=\"colour-sativa\" toggleStrains={this.toggleStrains} />\n                <FilterButtonSmall btnText=\"Indica\" customCssId=\"colour-indica\" toggleStrains={this.toggleStrains} />\n                <FilterButtonSmall btnText=\"Hybrid\" customCssId=\"colour-hybrid\" toggleStrains={this.toggleStrains} />\n                {this.state.strainVisible !== 'all' ? <FilterButtonSmall btnText=\"Reset\" customCssId=\"colour-reset\" toggleStrains={this.toggleStrains} /> : ''}\n              </div>}\n              <ul className=\"strain-list pl-0\">\n                {strainsList}\n              </ul>\n            </div>\n\n            <Route \n              path={`/effects/${strainEffectPath}/strain/:id`} \n              component={StrainProfile}\n            />\n\n            {!this.state.strainProfileSelected &&\n              <div className=\"col-md-8 pt-5 px-5 strain-placeholder-text\">\n                <h4 className=\"h5 text-center\">Select a strain from the sidebar to get started.</h4>\n              </div>\n            }\n\n          </div>\n        </div>\n      </ContentBlock>\n      </div>\n    );\n  }\n}\n\nexport default StrainsView;","import React, { Component } from 'react';\nimport ContentBlock from '../ContentBlock/ContentBlock';\nimport './GeneralPage.scss';\n\nclass GeneralPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      contentLoaded: false,\n      pageTitle: null,\n      pageBody: null\n    }\n  }\n\n  // function that calls the API based on the effect value and updates the local state\n  buildPage = (urlParams) => {\n\n    fetch(`${window.location.origin}/data/${urlParams}.json`)\n      .then((response) => response.json())\n      .then((data) => this.setState({\n        pageTitle: data.pageTitle, \n        pageBody: data.pageBody, \n        contentLoaded: true,\n      }))\n      .catch((err) => console.log(`Something went wrong ${err}`));\n  }\n\n  componentDidMount() {\n    const { path } = this.props.match;\n    this.buildPage(path);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { path } = this.props.match;\n    if (path !== prevProps.match.path) {\n      this.buildPage(path);\n    }\n  }\n\n  render() {\n\n    let pageContent,\n        title;\n\n    const { pageTitle, pageBody, contentLoaded } = this.state;\n    \n    if (contentLoaded) {\n      pageContent = pageBody;\n      title = pageTitle;\n    } else {\n      pageContent = 'Loading';\n    }\n\n    return(\n      <ContentBlock>\n        <div className=\"container\">\n          <div className=\"row my-5\">\n            <div className=\"col-md-12\">\n              <h1>{ title }</h1>\n            </div>\n          </div>\n          <div className=\"row general-page-wrapper\">\n            <div className=\"col-md-10 offset-md-1 pt-5 pb-4 px-0\">\n              <p>{ pageContent }</p>\n            </div>\n          </div>\n        </div>\n      </ContentBlock>\n    );\n\n  }\n}\n\nexport default GeneralPage;","import React from 'react';\nimport ContentBlock from '../ContentBlock/ContentBlock';\n\nconst NoMatch = (props) => (\n  <ContentBlock>\n    <div className=\"container\">\n      <div className=\"row general-page-wrapper\">\n        <div className=\"col-md-10 offset-md-1 pt-5 pb-4 px-0\">\n          <p>Error. We can't find the page you're looking for.</p>\n        </div>\n      </div>\n    </div>\n  </ContentBlock>\n);\n\nexport default NoMatch;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport HomePanel from './../components/HomePanel/HomePanel';\nimport StrainsView from './../components/StrainsView/StrainsView';\nimport GeneralPage from './../components/GeneralPage/GeneralPage';\nimport NoMatch from './../components/NoMatch/NoMatch';\n\n\nconst AppRouter = () => (\n  <Switch>\n    <Route path='/' component={HomePanel} exact />\n    <Route path='/effects/:id' component={StrainsView}/>\n    <Route path='/about-strain-search' component={GeneralPage}/>\n    <Route path='/disclaimer' component={GeneralPage}/>\n    <Route component={NoMatch} />\n  </Switch>\n);\n\nexport default AppRouter;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div id=\"mainnav\" className=\"py-4 px-5\">\n        <span><Link to='/'>Strain Search</Link></span>\n        <nav>\n          <ul className=\"mb-0\">\n            <li><Link to=\"/about-strain-search\">About SS</Link></li>\n            <li><Link to=\"/disclaimer\">Disclaimer</Link></li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport AppRouter from './../../routers/AppRouter';\nimport Navigation from '../Navigation/Navigation';\nimport './../../styles/global/bootstrap.min.css';\nimport './../../styles/global/App.scss';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <AppRouter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}